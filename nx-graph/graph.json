{
  "graph": {
    "nodes": {
      "internal-client-e2e": {
        "name": "internal-client-e2e",
        "type": "e2e",
        "data": {
          "name": "internal-client-e2e",
          "root": "apps/internal-client-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/internal-client-e2e/src",
          "projectType": "application",
          "targets": {
            "e2e": {
              "executor": "@mands/nx-playwright:playwright-executor",
              "options": {
                "e2eFolder": "apps/internal-client-e2e",
                "devServerTarget": "internal-client:serve",
                "packageRunner": "npx"
              },
              "configurations": {
                "production": {
                  "devServerTarget": "internal-client:serve:production"
                }
              }
            },
            "ci-prod": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx playwright test",
                "cwd": "apps/internal-client-e2e"
              },
              "configurations": {}
            },
            "ci-beta": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  {
                    "command": "npx http-server dist/apps/internal-client/exported",
                    "description": "Run http-server with exported files"
                  },
                  {
                    "command": "cd apps/internal-client-e2e && npx playwright test && echo '[finished-tests]' ",
                    "description": "run playwright tests"
                  }
                ],
                "parallel": true,
                "readyWhen": "[finished-tests]"
              },
              "configurations": {}
            },
            "ts-check": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  {
                    "command": "tsc --build --force --verbose apps/internal-client-e2e/tsconfig.json"
                  }
                ]
              },
              "configurations": {}
            },
            "lint": {
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "executor": "@nx/linter:eslint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/internal-client-e2e/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {}
            }
          },
          "tags": [],
          "implicitDependencies": [
            "internal-client"
          ]
        }
      },
      "internal-client": {
        "name": "internal-client",
        "type": "app",
        "data": {
          "name": "internal-client",
          "root": "apps/internal-client",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/internal-client",
          "projectType": "application",
          "targets": {
            "build": {
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ],
              "executor": "@nx/next:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/apps/internal-client"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/internal-client"
                },
                "production": {}
              }
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "internal-client:build",
                "dev": true
              },
              "configurations": {
                "development": {
                  "buildTarget": "internal-client:build:development",
                  "dev": true
                },
                "production": {
                  "buildTarget": "internal-client:build:production",
                  "dev": false
                }
              }
            },
            "export": {
              "executor": "@nx/next:export",
              "options": {
                "buildTarget": "internal-client:build:production"
              },
              "configurations": {}
            },
            "test": {
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/apps/internal-client"
              ],
              "options": {
                "jestConfig": "apps/internal-client/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {}
            },
            "lint": {
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "executor": "@nx/linter:eslint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "apps/internal-client/**/*.{ts,tsx}"
                ]
              },
              "configurations": {}
            },
            "smoke": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx http-server dist/apps/internal-client/exported"
              },
              "configurations": {}
            },
            "get-meta-data": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx ts-node --project=apps/internal-client/scripts/tsconfig.json apps/internal-client/scripts/get-meta-data.ts"
              },
              "configurations": {}
            },
            "validate-static-projects": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx ts-node --project=apps/internal-client/scripts/tsconfig.json apps/internal-client/scripts/validate-static-projects.ts"
              },
              "configurations": {}
            },
            "validate-blog-posts": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx ts-node --project=apps/internal-client/scripts/tsconfig.json apps/internal-client/scripts/validate-blog-posts.ts"
              },
              "configurations": {}
            },
            "lighthouse": {
              "executor": "nx:run-commands",
              "options": {
                "commands": [
                  {
                    "command": "mkdir dist/apps/internal-client/exported/bradtaniguchi-dev",
                    "description": "Make missing directories"
                  },
                  {
                    "command": "cp -r dist/apps/internal-client/exported/_next dist/apps/internal-client/exported/bradtaniguchi-dev/",
                    "description": "Copy files into bradtaniguchi-dev sub-folder for testing"
                  },
                  {
                    "command": "npx lhci autorun --config=./.lighthouse/lighthouserc.js --collect.staticDistDir=./dist/apps/internal-client/exported",
                    "description": "Run lighthouse"
                  }
                ],
                "parallel": false
              },
              "configurations": {}
            }
          },
          "tags": [],
          "implicitDependencies": []
        }
      },
      "common-react": {
        "name": "common-react",
        "type": "lib",
        "data": {
          "name": "common-react",
          "root": "libs/common-react",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/common-react/src",
          "projectType": "library",
          "tags": [],
          "targets": {
            "build": {
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ],
              "executor": "@nrwl/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/common-react",
                "tsConfig": "libs/common-react/tsconfig.lib.json",
                "project": "libs/common-react/package.json",
                "entryFile": "libs/common-react/src/index.ts",
                "external": [
                  "react/jsx-runtime"
                ],
                "rollupConfig": "@nx/react/plugins/bundle-rollup",
                "compiler": "babel",
                "assets": [
                  {
                    "glob": "libs/common-react/README.md",
                    "input": ".",
                    "output": "."
                  }
                ],
                "updateBuildableProjectDepsInPackageJson": true
              },
              "configurations": {}
            },
            "lint": {
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "executor": "@nx/linter:eslint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/common-react/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {}
            },
            "test": {
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/common-react"
              ],
              "options": {
                "jestConfig": "libs/common-react/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {}
            },
            "typedoc": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx typedoc --options libs/common-react/typedoc.json"
              },
              "configurations": {}
            },
            "storybook": {
              "executor": "@nx/storybook:storybook",
              "options": {
                "port": 4400,
                "configDir": "libs/common-react/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              }
            },
            "build-storybook": {
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/.storybook/**/*",
                "{projectRoot}/.storybook/**/*",
                "{projectRoot}/tsconfig.storybook.json"
              ],
              "executor": "@nx/storybook:build",
              "outputs": [
                "{options.outputDir}"
              ],
              "options": {
                "configDir": "libs/common-react/.storybook",
                "outputDir": "dist/storybook/common-react"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              }
            }
          },
          "implicitDependencies": []
        }
      },
      "forem-api": {
        "name": "forem-api",
        "type": "lib",
        "data": {
          "name": "forem-api",
          "root": "libs/forem-api",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/forem-api/src",
          "projectType": "library",
          "targets": {
            "build": {
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ],
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/forem-api",
                "tsConfig": "libs/forem-api/tsconfig.lib.json",
                "packageJson": "libs/forem-api/package.json",
                "main": "libs/forem-api/src/index.ts",
                "assets": [
                  "libs/forem-api/*.md"
                ],
                "updateBuildableProjectDepsInPackageJson": true
              },
              "configurations": {}
            },
            "lint": {
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "executor": "@nx/linter:eslint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/forem-api/**/*.ts"
                ]
              },
              "configurations": {}
            },
            "test": {
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/forem-api/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {}
            },
            "get-articles": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx ts-node --project=libs/forem-api/tools/tsconfig.json libs/forem-api/tools/get-articles.ts"
              },
              "configurations": {}
            },
            "get-article": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx ts-node --project=libs/forem-api/tools/tsconfig.json libs/forem-api/tools/get-article.ts"
              },
              "configurations": {}
            }
          },
          "tags": [],
          "implicitDependencies": []
        }
      },
      "storybook": {
        "name": "storybook",
        "type": "lib",
        "data": {
          "name": "storybook",
          "root": "libs/storybook",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/storybook/src",
          "projectType": "library",
          "tags": [],
          "targets": {
            "build": {
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ],
              "executor": "@nrwl/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/storybook",
                "tsConfig": "libs/storybook/tsconfig.lib.json",
                "project": "libs/storybook/package.json",
                "entryFile": "libs/storybook/src/index.ts",
                "external": [
                  "react/jsx-runtime"
                ],
                "rollupConfig": "@nx/react/plugins/bundle-rollup",
                "compiler": "babel",
                "assets": [
                  {
                    "glob": "libs/storybook/README.md",
                    "input": ".",
                    "output": "."
                  }
                ],
                "updateBuildableProjectDepsInPackageJson": true
              },
              "configurations": {}
            },
            "lint": {
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "executor": "@nx/linter:eslint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/storybook/**/*.{ts,tsx,js,jsx}"
                ]
              },
              "configurations": {}
            },
            "test": {
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/storybook"
              ],
              "options": {
                "jestConfig": "libs/storybook/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {}
            },
            "storybook": {
              "executor": "@nx/storybook:storybook",
              "options": {
                "port": 4400,
                "configDir": "libs/storybook/.storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              }
            },
            "build-storybook": {
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/.storybook/**/*",
                "{projectRoot}/.storybook/**/*",
                "{projectRoot}/tsconfig.storybook.json"
              ],
              "executor": "@nx/storybook:build",
              "outputs": [
                "{options.outputDir}"
              ],
              "options": {
                "configDir": "libs/storybook/.storybook",
                "outputDir": "dist/storybook/storybook"
              },
              "configurations": {
                "ci": {
                  "quiet": true
                }
              }
            },
            "typedoc": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx typedoc --options libs/storybook/typedoc.json"
              },
              "configurations": {}
            }
          },
          "implicitDependencies": []
        }
      },
      "markdown": {
        "name": "markdown",
        "type": "lib",
        "data": {
          "name": "markdown",
          "root": "libs/markdown",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/markdown/src",
          "projectType": "library",
          "targets": {
            "lint": {
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "executor": "@nx/linter:eslint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/markdown/**/*.ts"
                ]
              },
              "configurations": {}
            },
            "test": {
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/markdown"
              ],
              "options": {
                "jestConfig": "libs/markdown/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {}
            }
          },
          "tags": [],
          "implicitDependencies": []
        }
      },
      "common": {
        "name": "common",
        "type": "lib",
        "data": {
          "name": "common",
          "root": "libs/common",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/common/src",
          "projectType": "library",
          "targets": {
            "build": {
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ],
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/libs/common",
                "tsConfig": "libs/common/tsconfig.lib.json",
                "packageJson": "libs/common/package.json",
                "main": "libs/common/src/index.ts",
                "assets": [
                  "libs/common/*.md"
                ],
                "updateBuildableProjectDepsInPackageJson": true
              },
              "configurations": {}
            },
            "lint": {
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json"
              ],
              "executor": "@nx/linter:eslint",
              "outputs": [
                "{options.outputFile}"
              ],
              "options": {
                "lintFilePatterns": [
                  "libs/common/**/*.ts"
                ]
              },
              "configurations": {}
            },
            "test": {
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js"
              ],
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/libs/common"
              ],
              "options": {
                "jestConfig": "libs/common/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {}
            },
            "typedoc": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx typedoc --options libs/common/typedoc.json"
              },
              "configurations": {}
            }
          },
          "tags": [],
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "internal-client-e2e": [
        {
          "source": "internal-client-e2e",
          "target": "internal-client",
          "type": "implicit"
        }
      ],
      "internal-client": [
        {
          "source": "internal-client",
          "target": "common-react",
          "type": "static"
        },
        {
          "source": "internal-client",
          "target": "forem-api",
          "type": "static"
        }
      ],
      "common-react": [
        {
          "source": "common-react",
          "target": "common",
          "type": "static"
        }
      ],
      "forem-api": [],
      "storybook": [],
      "markdown": [],
      "common": []
    }
  },
  "affectedProjects": [],
  "criticalPath": []
}
