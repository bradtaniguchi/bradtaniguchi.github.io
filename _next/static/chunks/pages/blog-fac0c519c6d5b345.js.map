{"version":3,"file":"static/chunks/pages/blog-fac0c519c6d5b345.js","mappings":"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","sources":["webpack://_N_E/?ed14","webpack://_N_E/./components/blog/dev-to-post.tsx","webpack://_N_E/./components/blog/static-blog-post.tsx","webpack://_N_E/./components/core/card.tsx","webpack://_N_E/../../node_modules/react-use/esm/useTimeoutFn.js","webpack://_N_E/../../node_modules/react-use/esm/useDebounce.js","webpack://_N_E/./components/projects/list-filters.tsx","webpack://_N_E/./models/dev-migrated-post.ts","webpack://_N_E/./pages/blog/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/blog\",\n      function () {\n        return require(\"private-next-pages/blog/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/blog\"])\n      });\n    }\n  ","import { Box, Label, Text } from '@primer/react';\nimport { DevMigratedPost } from '../../models/dev-migrated-post';\nimport Dayjs from 'dayjs';\nimport Link from 'next/link';\nimport { memo } from 'react';\nimport { BlogPostDisplayMode } from './blog-post-display-mode';\n\nexport interface DevToPostProps {\n  blog: DevMigratedPost;\n  /**\n   * The display mode to show the card with.\n   * Defaults to row.\n   */\n  displayMode?: BlogPostDisplayMode;\n}\n\n/**\n * Dev Blog UI component\n */\nexport const DevToPost = memo(function DevToPost(props: DevToPostProps) {\n  const displayMode = props.displayMode || 'row';\n\n  return (\n    <Link\n      href={`blog/dev/${props.blog.id}?slug=${props.blog.slug}`}\n      style={{ textDecoration: 'inherit' }}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection={['column', 'column', displayMode]}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box\n          display=\"flex\"\n          flexDirection={['column', 'column', displayMode]}\n          alignItems=\"center\"\n          sx={{ gap: '8px' }}\n        >\n          <Text as=\"h4\" margin={0}>\n            {props.blog.title}\n          </Text>\n          <Text as=\"p\">{props.blog.description}</Text>\n        </Box>\n\n        <Box\n          display=\"flex\"\n          flexDirection={['column', 'column', displayMode]}\n          alignItems=\"center\"\n          sx={{ gap: '4px' }}\n        >\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            sx={{ gap: '4px' }}\n          >\n            {(props.blog.tags || []).map((tag) => (\n              <Label variant=\"accent\" key={tag}>\n                {tag}\n              </Label>\n            ))}\n            <Label variant=\"success\">dev.to</Label>\n          </Box>\n\n          {props.blog.date && (\n            <Box title={props.blog.date}>\n              {Dayjs(props.blog.date).format('YYYY-MM-DD')}\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Link>\n  );\n});\n","import { Box, Label, Text } from '@primer/react';\nimport Dayjs from 'dayjs';\nimport Link from 'next/link';\nimport { memo } from 'react';\nimport { StaticBlogPost as IStaticBlogPost } from '../../models/static-blog-post';\nimport { BlogPostDisplayMode } from './blog-post-display-mode';\n\nexport interface StaticBlogPostProps {\n  blog: IStaticBlogPost;\n  /**\n   * The display mode to show the card with.\n   * Defaults to row.\n   */\n  displayMode?: BlogPostDisplayMode;\n}\n\n/**\n * Static blog UI component\n */\nexport const StaticBlogPost = memo(function StaticBlogPost(\n  props: StaticBlogPostProps\n) {\n  const displayMode = props.displayMode || 'row';\n\n  return (\n    <Link\n      href={`blog/${props.blog.slug}`}\n      style={{ textDecoration: 'inherit' }}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection={['column', 'column', displayMode]}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box\n          display=\"flex\"\n          flexDirection={['column', 'column', displayMode]}\n          alignItems=\"center\"\n          sx={{ gap: '8px' }}\n        >\n          <Text as=\"h4\" margin={0}>\n            {props.blog.title}\n          </Text>\n          <Text as=\"p\">{props.blog.description}</Text>\n        </Box>\n\n        <Box\n          display=\"flex\"\n          flexDirection={['column', 'column', displayMode]}\n          alignItems=\"center\"\n          sx={{ gap: '4px' }}\n        >\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            sx={{ gap: '4px' }}\n          >\n            {(props.blog.tags || []).map((tag) => (\n              <Label variant=\"accent\" key={tag}>\n                {tag}\n              </Label>\n            ))}\n          </Box>\n\n          {props.blog.date && (\n            <Box title={props.blog.date}>\n              {Dayjs(props.blog.date).format('YYYY-MM-DD')}\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Link>\n  );\n});\n","import { Box, BoxProps } from '@primer/react';\n\nexport function Card(props: BoxProps) {\n  return (\n    <Box\n      borderColor=\"border.default\"\n      borderWidth={1}\n      borderStyle=\"solid\"\n      borderRadius=\"8px\"\n      {...props}\n    >\n      {props.children}\n    </Box>\n  );\n}\n\nCard.Header = function Header(props: BoxProps) {\n  return (\n    <Box bg=\"canvas.inset\" p={3} borderRadius=\"8px 8px 0 0\" {...props}>\n      {props.children}\n    </Box>\n  );\n};\n\nCard.Body = function Body(props: BoxProps) {\n  return (\n    <Box p={3} {...props}>\n      {props.children}\n    </Box>\n  );\n};\n\nCard.Row = function Row(props: BoxProps) {\n  // TODO: add row styling\n  return (\n    <Box\n      borderTopColor=\"border.default\"\n      borderTopStyle=\"solid\"\n      borderTopWidth=\"1px\"\n      {...props}\n    >\n      {props.children}\n    </Box>\n  );\n};\n","import { useCallback, useEffect, useRef } from 'react';\nexport default function useTimeoutFn(fn, ms) {\n    if (ms === void 0) { ms = 0; }\n    var ready = useRef(false);\n    var timeout = useRef();\n    var callback = useRef(fn);\n    var isReady = useCallback(function () { return ready.current; }, []);\n    var set = useCallback(function () {\n        ready.current = false;\n        timeout.current && clearTimeout(timeout.current);\n        timeout.current = setTimeout(function () {\n            ready.current = true;\n            callback.current();\n        }, ms);\n    }, [ms]);\n    var clear = useCallback(function () {\n        ready.current = null;\n        timeout.current && clearTimeout(timeout.current);\n    }, []);\n    // update ref when function changes\n    useEffect(function () {\n        callback.current = fn;\n    }, [fn]);\n    // set on mount, clear on unmount\n    useEffect(function () {\n        set();\n        return clear;\n    }, [ms]);\n    return [isReady, clear, set];\n}\n","import { useEffect } from 'react';\nimport useTimeoutFn from './useTimeoutFn';\nexport default function useDebounce(fn, ms, deps) {\n    if (ms === void 0) { ms = 0; }\n    if (deps === void 0) { deps = []; }\n    var _a = useTimeoutFn(fn, ms), isReady = _a[0], cancel = _a[1], reset = _a[2];\n    useEffect(reset, deps);\n    return [isReady, cancel];\n}\n","import { FilterIcon, SearchIcon, XIcon } from '@primer/octicons-react';\nimport { Box, IconButton, Label, TextInput } from '@primer/react';\nimport {\n  ChangeEventHandler,\n  memo,\n  MouseEventHandler,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useDebounce } from 'react-use';\n\nexport interface ListFilterProps {\n  /**\n   * Callback that is called when the search is finished\n   */\n  onSearchChange?: (searchValue: string) => unknown;\n  /**\n   * Callback that is called when the user closes/clears the search.\n   */\n  onSearchClear?: () => unknown;\n  /**\n   * Callback that is called when the user changes the selected tags.\n   * Returns all tags to filter against.\n   */\n  onTagChange?: (tags: string[]) => unknown;\n  /**\n   * Search debounce in milliseconds, will default to 100.\n   */\n  searchDebounce?: number;\n  /**\n   * Default search value used when the search is opened.\n   */\n  defaultSearchValue?: string;\n  /**\n   * The list of tags that can be selected\n   */\n  selectableTags?: string[];\n  /**\n   * The list of tags selected.\n   */\n  selectedTags?: string[];\n  /**\n   * If we are to show the tag filter or not.\n   */\n  hideTagFilter?: boolean;\n}\n\n/**\n * Filters that are shown on the different list pages shown.\n *\n */\nexport const ListFilters = memo(function ListFilters(props: ListFilterProps) {\n  const {\n    searchDebounce,\n    onSearchChange,\n    onSearchClear,\n    onTagChange,\n    defaultSearchValue,\n    selectableTags,\n    selectedTags,\n    hideTagFilter,\n  } = props;\n\n  // state\n  const [showTags, setShowTags] = useState<boolean>(false);\n  const [showSearch, setShowSearch] = useState<boolean>();\n  const [debouncedValue, setDebouncedValue] = useState<string>(\n    defaultSearchValue ?? ''\n  );\n\n  // effects\n  useEffect(() => {\n    if (defaultSearchValue) {\n      setShowSearch(!!defaultSearchValue);\n      setDebouncedValue(defaultSearchValue);\n    }\n  }, [defaultSearchValue]);\n\n  const [isReadyFn, cancel] = useDebounce(\n    () => {\n      if (typeof onSearchChange === 'function') onSearchChange(debouncedValue);\n    },\n    searchDebounce ?? 100,\n    [debouncedValue, onSearchChange]\n  );\n\n  // event handlers\n  const handleShowTagFilter: ChangeEventHandler<HTMLInputElement> =\n    useCallback(() => {\n      setShowTags(!showTags);\n    }, [showTags]);\n  const handleClickTag: MouseEventHandler<HTMLButtonElement> = useCallback(\n    (e) => {\n      if (typeof onTagChange !== 'function') return;\n      const tag = e.currentTarget.value;\n      const isSelected = (selectedTags || []).includes(tag);\n      if (isSelected)\n        return onTagChange((selectedTags || []).filter((t) => t !== tag));\n      onTagChange([...(selectedTags || []), tag]);\n    },\n    [onTagChange, selectedTags]\n  );\n  const handleShowTagFilterClose = useCallback(() => {\n    setShowTags(false);\n    // clear selected filters\n  }, []);\n  const handleSearchChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => setDebouncedValue(e.target.value),\n    []\n  );\n  const handleShowSearch = useCallback(() => setShowSearch(true), []);\n  const handleSearchClose = useCallback(() => {\n    if (isReadyFn()) {\n      setShowSearch(false);\n      setDebouncedValue('');\n      if (typeof onSearchClear === 'function') onSearchClear();\n    } else {\n      cancel();\n    }\n  }, [cancel, isReadyFn, onSearchClear]);\n\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        sx={{ gap: 2, marginLeft: '8px' }}\n      >\n        {!hideTagFilter && (\n          <div>\n            {showTags ? (\n              <Box\n                display=\"flex\"\n                sx={{ gap: 1 }}\n                alignItems=\"center\"\n                flexWrap=\"wrap\"\n              >\n                {(selectableTags || []).map((selectableTag) => (\n                  <button\n                    key={selectableTag}\n                    onClick={handleClickTag}\n                    value={selectableTag}\n                    type=\"button\"\n                    aria-label={`toggle tag ${selectableTag}`}\n                  >\n                    <Label\n                      variant={\n                        (selectedTags || []).includes(selectableTag)\n                          ? 'success'\n                          : 'accent'\n                      }\n                    >\n                      {selectableTag}\n                    </Label>\n                  </button>\n                ))}\n                <IconButton\n                  aria-label=\"hide tags\"\n                  icon={XIcon}\n                  onClick={handleShowTagFilterClose}\n                />\n              </Box>\n            ) : (\n              <Box\n                display=\"flex\"\n                sx={{ gap: 1 }}\n                alignItems=\"center\"\n                flexWrap=\"wrap\"\n              >\n                {(selectedTags || []).map((selectedTag) => (\n                  <button\n                    key={selectedTag}\n                    onClick={handleClickTag}\n                    value={selectedTag}\n                    type=\"button\"\n                    aria-label={`disable tag ${selectedTag}`}\n                  >\n                    <Label variant=\"success\">{selectedTag}</Label>\n                  </button>\n                ))}\n                <IconButton\n                  aria-label=\"show tags\"\n                  icon={FilterIcon}\n                  onClick={handleShowTagFilter}\n                />\n              </Box>\n            )}\n          </div>\n        )}\n        <div>\n          {showSearch ? (\n            <TextInput\n              aria-label=\"search\"\n              name=\"search\"\n              placeholder=\"Search\"\n              autoComplete=\"off\"\n              onChange={handleSearchChange}\n              value={debouncedValue}\n              trailingAction={\n                <TextInput.Action\n                  onClick={handleSearchClose}\n                  icon={XIcon}\n                  aria-label=\"close search\"\n                />\n              }\n            />\n          ) : (\n            <IconButton\n              aria-label=\"show search\"\n              icon={SearchIcon}\n              onClick={handleShowSearch}\n            />\n          )}\n        </div>\n      </Box>\n    </>\n  );\n});\n","import { DevToPost } from '@bradtaniguchi-dev/forem-api';\nimport * as z from 'zod';\n\n/**\n * Migrated version of what is returned from the dev API.\n *\n * Works with inter-opt with StaticBlogPost, with support for extras.\n */\nexport interface DevMigratedPost {\n  /**\n   * The id to identify this post.\n   * Used for direct lookups for the post.\n   */\n  id: number;\n  /**\n   * The slug for the blog post, shown in the URL.\n   * is re-used for portfolio posts\n   */\n  slug: DevToPost['slug'];\n\n  /**\n   * Title of the blog post\n   */\n  title: DevToPost['title'];\n\n  /**\n   * The description of the project, shown as a summary\n   */\n  description: DevToPost['description'];\n\n  /**\n   * Tags for this post.\n   * **note** this is always migrated, as the API seems to return\n   * a string or an array of strings in different situations for some reason.\n   */\n  tags: string[];\n\n  /**\n   * The date this post was published at\n   */\n  date: DevToPost['published_at'];\n\n  /**\n   * The source of the post\n   */\n  source: 'dev.to';\n}\n\n/**\n * Migrates the given post from dev.to to the internal format.\n */\nexport const migrateDevPost = (post: DevToPost): DevMigratedPost => ({\n  id: post.id,\n  slug: post.slug,\n  title: post.title,\n  description: post.description,\n  tags: Array.isArray(post.tag_list)\n    ? post.tag_list\n    : post.tag_list.split(',').map((tag) => tag.trim()),\n  date: post.published_at,\n  source: 'dev.to',\n});\n/**\n * Zod based validation schema used to test if the given data\n * is a migratedDevPost.\n */\nexport const migratedDevPostSchema = z.object({\n  id: z.number(),\n  slug: z.string(),\n  title: z.string(),\n  description: z.string(),\n  tags: z.union([z.array(z.string()), z.string()]),\n  date: z.string(),\n  source: z.literal('dev.to'),\n});\n\n/**\n * Type-guard for the MigratedDevPost type.\n *\n * Internally uses the `migratedDevPostSchema` to validate the given data.\n */\nexport const isMigratedDevPost = (post: unknown): post is DevMigratedPost => {\n  if (!post) return false;\n  try {\n    migratedDevPostSchema.parse(post);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n","import {\n  useHasMounted,\n  useLocalCollection,\n  useTagFilter,\n} from '@bradtaniguchi-dev/common-react';\nimport { getArticlesFromCache } from '@bradtaniguchi-dev/forem-api';\nimport { Box, Button, Spinner, Text } from '@primer/react';\nimport { GetStaticPropsResult } from 'next';\nimport { useRouter } from 'next/router';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { DevToPost } from '../../components/blog/dev-to-post';\nimport { StaticBlogPost } from '../../components/blog/static-blog-post';\nimport { Card } from '../../components/core/card';\nimport {\n  ListFilterProps,\n  ListFilters,\n} from '../../components/projects/list-filters';\nimport { BLOG_PATH } from '../../constants/blog-path';\nimport {\n  DevMigratedPost,\n  isMigratedDevPost,\n  migrateDevPost,\n} from '../../models/dev-migrated-post';\nimport { StaticBlogPost as IStaticBlogPost } from '../../models/static-blog-post';\nimport {\n  getBlogPostsMetaData,\n  verifyBlogPostMetaData,\n} from '../../utils/get-blog-post-meta-data';\nimport { getMarkdownFiles } from '../../utils/get-markdown-files';\n\nexport interface BlogProps {\n  posts: Array<IStaticBlogPost | DevMigratedPost>;\n}\n\nexport default function Blog(props: BlogProps) {\n  const router = useRouter();\n  const mounted = useHasMounted();\n\n  const defaultSearchValue = Array.isArray(router.query.q)\n    ? router.query.q.join(' ')\n    : router.query.q;\n\n  const defaultTags = (\n    Array.isArray(router.query.tags) ? router.query.tags : [router.query.tags]\n  ).filter((tag) => typeof tag === 'string' && tag) as string[];\n\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [limit, setLimit] = useState<number>(5);\n\n  const handleSearchChange: ListFilterProps['onSearchChange'] = useCallback(\n    (searchValue: string) => {\n      setSearchValue(searchValue);\n      setLimit(5);\n    },\n    []\n  );\n\n  const handleSearchClose = useCallback(() => {\n    setLimit(5);\n  }, []);\n\n  const handleShowMoreOnClick = () => setLimit(limit + 5);\n\n  /**\n   * Tag filter custom hook.\n   */\n  const { selectableTags, selectedTags, setSelectedTags } = useTagFilter({\n    elements: props.posts,\n  });\n\n  /**\n   * Filters for the useLocalCollection.\n   * These keep track of the selectedTags from the useTagFilter custom hook.\n   */\n  const filters = useMemo(() => {\n    return [\n      // only show posts that match the tag value if there is one\n      (post: IStaticBlogPost | DevMigratedPost) =>\n        selectedTags.length\n          ? selectedTags.some((tag) => (post.tags || []).includes(tag))\n          : true,\n    ];\n  }, [selectedTags]);\n\n  /**\n   * Runtime effect that is ran initially when the defaultTags are calculated.\n   * This needs to be ran here as the useTagFilter custom hook is not available\n   * on the server-side during render.\n   */\n  useEffect(() => {\n    if (defaultTags && defaultTags.length) setSelectedTags(defaultTags);\n  }, [defaultTags, setSelectedTags]);\n\n  /**\n   * Custom hook to manage a collection of posts. Handles filtering, and auto-sorting\n   */\n  const { results: posts } = useLocalCollection({\n    elements: props.posts,\n    filters,\n    searchOptions: useMemo(\n      () => ({\n        keys: ['title', 'description', 'tags'] as Array<keyof IStaticBlogPost>,\n        distance: 0.8,\n      }),\n      []\n    ),\n    search: searchValue,\n    sortBy: 'date',\n    sortDir: 'dsc',\n  });\n\n  // we only want to show this button if the limit is less than the total\n  const showShowMore = limit < posts.length;\n\n  // when in a server-environment, render a spinner for the quick duration\n  // between hydration and rendering\n  if (!mounted) return <Spinner />;\n\n  return (\n    <Card>\n      <Card.Header>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Text as=\"h2\" fontSize={'inherit'} margin={0}>\n            Posts\n          </Text>\n          <div>\n            <ListFilters\n              defaultSearchValue={defaultSearchValue}\n              selectableTags={selectableTags}\n              selectedTags={selectedTags}\n              onSearchChange={handleSearchChange}\n              onSearchClear={handleSearchClose}\n              onTagChange={setSelectedTags}\n            />\n          </div>\n        </Box>\n      </Card.Header>\n      <Card.Body p={0}>\n        <ul>\n          {posts\n            .map((post) => (\n              <Card.Row p={3} key={post.slug}>\n                <li>\n                  {(() => {\n                    if (isMigratedDevPost(post))\n                      return <DevToPost blog={post} />;\n                    // can support other types here.\n                    return <StaticBlogPost blog={post}></StaticBlogPost>;\n                  })()}\n                </li>\n              </Card.Row>\n            ))\n            .slice(0, limit)}\n        </ul>\n        {showShowMore ? (\n          <Box sx={{ margin: '8px' }}>\n            <Button\n              sx={{\n                display: 'flex',\n                width: '100%',\n                flexDirection: 'row',\n                justifyContent: 'center',\n              }}\n              onClick={handleShowMoreOnClick}\n            >\n              Show More\n            </Button>\n          </Box>\n        ) : null}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport async function getStaticProps(): Promise<\n  GetStaticPropsResult<BlogProps>\n> {\n  const blogPaths = await getMarkdownFiles(BLOG_PATH);\n\n  const [blogPostsMetaData, devToPosts] = await Promise.all([\n    getBlogPostsMetaData(blogPaths),\n    // get all blog posts from dev.to\n    getArticlesFromCache({\n      username: 'bradtaniguchi',\n    }),\n  ]);\n\n  const allPosts: Array<IStaticBlogPost | DevMigratedPost> = [\n    ...blogPostsMetaData,\n    ...devToPosts.map(migrateDevPost),\n  ];\n\n  verifyBlogPostMetaData(allPosts);\n\n  return {\n    props: {\n      posts: allPosts,\n    },\n    // set as high number to prevent extra hits against\n    // the forem api.\n    // 10k seconds\n    revalidate: 10_000,\n  };\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","DevToPost","memo","props","displayMode","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Link","href","blog","id","concat","slug","style","textDecoration","jsxs","Box","display","flexDirection","alignItems","justifyContent","sx","gap","Text","as","margin","title","description","tags","map","Label","variant","tag","date","Dayjs","format","StaticBlogPost","Card","borderColor","borderWidth","borderStyle","borderRadius","children","Header","bg","p","Body","Row","borderTopColor","borderTopStyle","borderTopWidth","ListFilters","fn","ms","ready","timeout","callback","isReady","set","clear","_a","cancel","reset","searchDebounce","onSearchChange","onSearchClear","onTagChange","defaultSearchValue","selectableTags","selectedTags","hideTagFilter","showTags","setShowTags","useState","showSearch","setShowSearch","debouncedValue","setDebouncedValue","useEffect","isReadyFn","react","useRef","useCallback","current","clearTimeout","setTimeout","handleShowTagFilter","handleClickTag","e","currentTarget","value","isSelected","includes","filter","t","handleShowTagFilterClose","handleSearchChange","target","handleShowSearch","handleSearchClose","jsx_runtime","Fragment","marginLeft","div","flexWrap","button","onClick","selectableTag","type","aria-label","IconButton","icon","XIcon","selectedTag","FilterIcon","TextInput","name","placeholder","autoComplete","onChange","trailingAction","SearchIcon","migratedDevPostSchema","z","source","isMigratedDevPost","post","parse","err","Blog","router","useRouter","mounted","useHasMounted","Array","isArray","query","q","join","defaultTags","searchValue","setSearchValue","limit","setLimit","handleShowMoreOnClick","setSelectedTags","useTagFilter","elements","posts","filters","useMemo","length","some","results","useLocalCollection","searchOptions","keys","distance","search","sortBy","sortDir","showShowMore","fontSize","ul","li","slice","Button","width","Spinner"],"sourceRoot":""}