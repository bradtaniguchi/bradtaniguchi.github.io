{"version":3,"file":"static/chunks/pages/index-eafff7cced4a98ae.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./components/blog/dev-to-post.tsx","webpack://_N_E/./components/blog/static-blog-post.tsx","webpack://_N_E/./components/core/card.tsx","webpack://_N_E/./models/dev-migrated-post.ts","webpack://_N_E/./utils/logger.tsx","webpack://_N_E/./components/activity/github-public-activity.tsx","webpack://_N_E/./components/activity/activities.tsx","webpack://_N_E/./constants/github-url.ts","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { Box, Label, Text } from '@primer/react';\nimport { DevMigratedPost } from '../../models/dev-migrated-post';\nimport Dayjs from 'dayjs';\nimport Link from 'next/link';\nimport { memo } from 'react';\nimport { BlogPostDisplayMode } from './blog-post-display-mode';\n\nexport interface DevToPostProps {\n  blog: DevMigratedPost;\n  /**\n   * The display mode to show the card with.\n   * Defaults to row.\n   */\n  displayMode?: BlogPostDisplayMode;\n}\n\n/**\n * Dev Blog UI component\n */\nexport const DevToPost = memo(function DevToPost(props: DevToPostProps) {\n  const displayMode = props.displayMode || 'row';\n\n  return (\n    <Link\n      href={`blog/dev/${props.blog.id}?slug=${props.blog.slug}`}\n      style={{ textDecoration: 'inherit' }}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection={['column', 'column', displayMode]}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box\n          display=\"flex\"\n          flexDirection={['column', 'column', displayMode]}\n          alignItems=\"center\"\n          sx={{ gap: '8px' }}\n        >\n          <Text as=\"h4\" margin={0}>\n            {props.blog.title}\n          </Text>\n          <Text as=\"p\">{props.blog.description}</Text>\n        </Box>\n\n        <Box\n          display=\"flex\"\n          flexDirection={['column', 'column', displayMode]}\n          alignItems=\"center\"\n          sx={{ gap: '4px' }}\n        >\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            sx={{ gap: '4px' }}\n          >\n            {(props.blog.tags || []).map((tag) => (\n              <Label variant=\"accent\" key={tag}>\n                {tag}\n              </Label>\n            ))}\n            <Label variant=\"success\">dev.to</Label>\n          </Box>\n\n          {props.blog.date && (\n            <Box title={props.blog.date}>\n              {Dayjs(props.blog.date).format('YYYY-MM-DD')}\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Link>\n  );\n});\n","import { Box, Label, Text } from '@primer/react';\nimport Dayjs from 'dayjs';\nimport Link from 'next/link';\nimport { memo } from 'react';\nimport { StaticBlogPost as IStaticBlogPost } from '../../models/static-blog-post';\nimport { BlogPostDisplayMode } from './blog-post-display-mode';\n\nexport interface StaticBlogPostProps {\n  blog: IStaticBlogPost;\n  /**\n   * The display mode to show the card with.\n   * Defaults to row.\n   */\n  displayMode?: BlogPostDisplayMode;\n}\n\n/**\n * Static blog UI component\n */\nexport const StaticBlogPost = memo(function StaticBlogPost(\n  props: StaticBlogPostProps\n) {\n  const displayMode = props.displayMode || 'row';\n\n  return (\n    <Link\n      href={`blog/${props.blog.slug}`}\n      style={{ textDecoration: 'inherit' }}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection={['column', 'column', displayMode]}\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >\n        <Box\n          display=\"flex\"\n          flexDirection={['column', 'column', displayMode]}\n          alignItems=\"center\"\n          sx={{ gap: '8px' }}\n        >\n          <Text as=\"h4\" margin={0}>\n            {props.blog.title}\n          </Text>\n          <Text as=\"p\">{props.blog.description}</Text>\n        </Box>\n\n        <Box\n          display=\"flex\"\n          flexDirection={['column', 'column', displayMode]}\n          alignItems=\"center\"\n          sx={{ gap: '4px' }}\n        >\n          <Box\n            display=\"flex\"\n            flexDirection=\"row\"\n            alignItems=\"center\"\n            sx={{ gap: '4px' }}\n          >\n            {(props.blog.tags || []).map((tag) => (\n              <Label variant=\"accent\" key={tag}>\n                {tag}\n              </Label>\n            ))}\n          </Box>\n\n          {props.blog.date && (\n            <Box title={props.blog.date}>\n              {Dayjs(props.blog.date).format('YYYY-MM-DD')}\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Link>\n  );\n});\n","import { Box, BoxProps } from '@primer/react';\n\nexport function Card(props: BoxProps) {\n  return (\n    <Box\n      borderColor=\"border.default\"\n      borderWidth={1}\n      borderStyle=\"solid\"\n      borderRadius=\"8px\"\n      {...props}\n    >\n      {props.children}\n    </Box>\n  );\n}\n\nCard.Header = function Header(props: BoxProps) {\n  return (\n    <Box bg=\"canvas.inset\" p={3} borderRadius=\"8px 8px 0 0\" {...props}>\n      {props.children}\n    </Box>\n  );\n};\n\nCard.Body = function Body(props: BoxProps) {\n  return (\n    <Box p={3} {...props}>\n      {props.children}\n    </Box>\n  );\n};\n\nCard.Row = function Row(props: BoxProps) {\n  // TODO: add row styling\n  return (\n    <Box\n      borderTopColor=\"border.default\"\n      borderTopStyle=\"solid\"\n      borderTopWidth=\"1px\"\n      {...props}\n    >\n      {props.children}\n    </Box>\n  );\n};\n","import { DevToPost } from '@bradtaniguchi-dev/forem-api';\nimport * as z from 'zod';\n\n/**\n * Migrated version of what is returned from the dev API.\n *\n * Works with inter-opt with StaticBlogPost, with support for extras.\n */\nexport interface DevMigratedPost {\n  /**\n   * The id to identify this post.\n   * Used for direct lookups for the post.\n   */\n  id: number;\n  /**\n   * The slug for the blog post, shown in the URL.\n   * is re-used for portfolio posts\n   */\n  slug: DevToPost['slug'];\n\n  /**\n   * Title of the blog post\n   */\n  title: DevToPost['title'];\n\n  /**\n   * The description of the project, shown as a summary\n   */\n  description: DevToPost['description'];\n\n  /**\n   * Tags for this post.\n   * **note** this is always migrated, as the API seems to return\n   * a string or an array of strings in different situations for some reason.\n   */\n  tags: string[];\n\n  /**\n   * The date this post was published at\n   */\n  date: DevToPost['published_at'];\n\n  /**\n   * The source of the post\n   */\n  source: 'dev.to';\n}\n\n/**\n * Migrates the given post from dev.to to the internal format.\n */\nexport const migrateDevPost = (post: DevToPost): DevMigratedPost => ({\n  id: post.id,\n  slug: post.slug,\n  title: post.title,\n  description: post.description,\n  tags: Array.isArray(post.tag_list)\n    ? post.tag_list\n    : post.tag_list.split(',').map((tag) => tag.trim()),\n  date: post.published_at,\n  source: 'dev.to',\n});\n/**\n * Zod based validation schema used to test if the given data\n * is a migratedDevPost.\n */\nexport const migratedDevPostSchema = z.object({\n  id: z.number(),\n  slug: z.string(),\n  title: z.string(),\n  description: z.string(),\n  tags: z.union([z.array(z.string()), z.string()]),\n  date: z.string(),\n  source: z.literal('dev.to'),\n});\n\n/**\n * Type-guard for the MigratedDevPost type.\n *\n * Internally uses the `migratedDevPostSchema` to validate the given data.\n */\nexport const isMigratedDevPost = (post: unknown): post is DevMigratedPost => {\n  if (!post) return false;\n  try {\n    migratedDevPostSchema.parse(post);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n","import { loggerContextFactory } from '@bradtaniguchi-dev/common-react';\nimport { captureMessage } from '@sentry/nextjs';\n\nexport const LoggerProvider = loggerContextFactory({\n  onLog: ({ level, message }) => {\n    if (level === 'error' && typeof message === 'string')\n      captureMessage(message);\n  },\n});\n","import { MarkGithubIcon } from '@primer/octicons-react';\nimport { Box, StyledOcticon, Timeline } from '@primer/react';\nimport Dayjs from 'dayjs';\nimport Link from 'next/link';\nimport { memo, useContext } from 'react';\nimport { GithubPublicActivity as GithubPublicActivityType } from '../../models/github-public-activity';\nimport { LoggerProvider } from '../../utils/logger';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GithubPublicActivityProps {\n  activity: GithubPublicActivityType;\n}\n\nconst GithubPublicActivityLogin = (props: GithubPublicActivityProps) => (\n  <Box\n    as=\"span\"\n    sx={{\n      fontWeight: 'bold',\n      color: 'fg.default',\n      mr: 1,\n    }}\n  >\n    <Link href={props.activity.actor.url}>{props.activity.actor.login}</Link>\n  </Box>\n);\n\nconst GithubPublicActivityRepo = (props: GithubPublicActivityProps) => (\n  <Box\n    as=\"span\"\n    sx={{\n      fontWeight: 'bold',\n      color: 'fg.default',\n      mr: 1,\n    }}\n  >\n    <Link href={props.activity.repo.url}>{props.activity.repo.name}</Link>\n  </Box>\n);\n\nconst GithubPublicActivityTime = (props: GithubPublicActivityProps) => (\n  <Box as=\"span\" color=\"fg.muted\">\n    <span title={props.activity.created_at ?? undefined}>\n      on {Dayjs(props.activity.created_at).format('YYYY-MM-DD')}\n    </span>\n  </Box>\n);\n\n/**\n * A component representing github public activity.\n */\nexport const GithubPublicActivity = memo(function GithubPublicActivity(\n  props: GithubPublicActivityProps\n) {\n  const logger = useContext(LoggerProvider);\n  return (\n    <Timeline.Item>\n      <Timeline.Badge>\n        <StyledOcticon icon={MarkGithubIcon} />\n      </Timeline.Badge>\n      <Timeline.Body>\n        {(() => {\n          switch (props.activity.type) {\n            case 'CreateEvent':\n              return (\n                <Box sx={{ display: 'inline' }}>\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  {(() => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if ((props.activity.payload as any).ref_type === 'branch')\n                      return 'created branch on ';\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if ((props.activity.payload as any).ref_type === 'branch')\n                      return 'created tag on ';\n                    return 'updated ';\n                  })()}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'DeleteEvent':\n              return (\n                <Box sx={{ display: 'inline' }}>\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  {(() => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if ((props.activity.payload as any).ref_type === 'branch')\n                      return 'deleted branch on ';\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if ((props.activity.payload as any).ref_type === 'branch')\n                      return 'deleted tag on ';\n                    return 'deleted ';\n                  })()}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'PushEvent':\n              return (\n                <Box\n                  sx={{ display: 'inline' }}\n                  title={JSON.stringify(props.activity, null, 2)}\n                >\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  pushed{' '}\n                  {(() => {\n                    type PayloadWithCommits = {\n                      commits: Array<{\n                        url: string;\n                      }>;\n                    };\n                    const hasMultiple =\n                      (props.activity.payload as PayloadWithCommits).commits\n                        ?.length > 1;\n\n                    return (\n                      <Link\n                        href={(\n                          (props.activity.payload as PayloadWithCommits)\n                            .commits[0].url || ''\n                        )\n                          .replace('api.github.com/repos/', 'github.com/')\n                          .replace('/commits/', '/commit/')}\n                      >\n                        {hasMultiple ? 'commits ' : 'a commit '}\n                      </Link>\n                    );\n                  })()}\n                  to {''}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'PullRequestEvent':\n              type PayloadWithPullRequest = {\n                pull_request: {\n                  url: string;\n                  html_url: string;\n                  number: number;\n                  title: string;\n                };\n              };\n              return (\n                <Box\n                  sx={{ display: 'inline' }}\n                  title={JSON.stringify(props.activity, null, 2)}\n                >\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  created pull request{' '}\n                  <Link\n                    href={\n                      (props.activity.payload as PayloadWithPullRequest)\n                        .pull_request.html_url\n                    }\n                    title={\n                      (props.activity.payload as PayloadWithPullRequest)\n                        .pull_request.title\n                    }\n                  >\n                    {`#${\n                      (props.activity.payload as PayloadWithPullRequest)\n                        .pull_request.number\n                    }`}\n                  </Link>{' '}\n                  for <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'IssuesEvent':\n              return (\n                <Box\n                  sx={{ display: 'inline' }}\n                  title={JSON.stringify(props.activity, null, 2)}\n                >\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  created issue{' '}\n                  <Link\n                    href={props.activity.payload.issue?.html_url ?? '404'}\n                    title={props.activity.payload.issue?.title}\n                  >\n                    {`#${props.activity.payload.issue?.number}`}\n                  </Link>{' '}\n                  for <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'WatchEvent':\n              if (props.activity.payload.action === 'started')\n                return (\n                  <Box sx={{ display: 'inline' }}>\n                    <GithubPublicActivityLogin activity={props.activity} />\n                    starred repo{' '}\n                    <GithubPublicActivityRepo activity={props.activity} />\n                    <GithubPublicActivityTime activity={props.activity} />\n                  </Box>\n                );\n              return (\n                <Box sx={{ display: 'inline' }}>\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  un-starred repo{' '}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'IssueCommentEvent':\n              // this is an experiment\n              return (\n                <Box sx={{ display: 'inline' }}>\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  un-starred repo{' '}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            default:\n              logger.error(\n                `[GithubPublicActivity] unknown public-activity: ${props.activity.type}`,\n                props.activity\n              );\n              return null;\n          }\n        })()}\n      </Timeline.Body>\n    </Timeline.Item>\n  );\n});\n","import { useHasMounted } from '@bradtaniguchi-dev/common-react';\nimport { Box, Button, Spinner, Timeline } from '@primer/react';\nimport { memo, useState } from 'react';\nimport { Activity } from '../../models/activity';\nimport { GithubPublicActivity } from './github-public-activity';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActivitiesProps {\n  activities: Activity[];\n}\n\n/**\n * The activities shown on the page. Currently only includes github\n * activity.\n */\nexport const Activities = memo(function Activities(props: ActivitiesProps) {\n  const [limit, setLimit] = useState<number>(5);\n  const mounted = useHasMounted();\n\n  const handleShowMoreOnClick = () => setLimit(limit + 5);\n\n  // we only want to show this button if the limit is less than the total\n  const showShowMore = limit < props.activities.length;\n\n  // when in a server-environment, render a spinner for the quick duration\n  // between hydration and rendering\n  if (!mounted) return <Spinner />;\n\n  if (!props.activities.length) return <div>No Timeline available</div>;\n\n  return (\n    <>\n      <Timeline data-testid=\"timeline\">\n        {props.activities\n          .map((activity) => (\n            <GithubPublicActivity key={activity.id} activity={activity} />\n          ))\n          .slice(0, limit)}\n      </Timeline>\n      {showShowMore ? (\n        <Box sx={{ margin: '8px' }}>\n          <Button\n            sx={{\n              display: 'flex',\n              width: '100%',\n              flexDirection: 'row',\n              justifyContent: 'center',\n            }}\n            type=\"button\"\n            onClick={handleShowMoreOnClick}\n          >\n            Show More\n          </Button>\n        </Box>\n      ) : // TODO: add some kind of \"continuation\" design to\n      // show activity doesn't just stop here\n      null}\n    </>\n  );\n});\n","/**\n * The URL for the github project. This will\n * change once this is migrated to be the primary repo.\n */\nexport const GITHUB_URL = 'https://github.com/bradtaniguchi/bradtaniguchi-dev';\n","import { Octokit, RestEndpointMethodTypes } from '@octokit/rest';\nimport { MarkGithubIcon, TabExternalIcon } from '@primer/octicons-react';\nimport { Box, LinkButton, StyledOcticon } from '@primer/react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { FaGithub, FaLinkedin, FaTwitter } from 'react-icons/fa';\nimport { SiCodewars, SiReplit } from 'react-icons/si';\nimport { Activities } from '../components/activity/activities';\nimport { DevToPost } from '../components/blog/dev-to-post';\nimport { StaticBlogPost } from '../components/blog/static-blog-post';\nimport { Card } from '../components/core/card';\nimport { GITHUB_URL } from '../constants/github-url';\nimport { Activity } from '../models/activity';\nimport {\n  DevMigratedPost,\n  isMigratedDevPost,\n} from '../models/dev-migrated-post';\nimport { StaticBlogPost as IStaticBlogPost } from '../models/static-blog-post';\nimport { getLatestPosts } from '../utils/get-latest-post';\nimport { getMarkdown } from '../utils/get-markdown';\nimport { withHeaders } from '../utils/with-headers';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface IndexProps {\n  /**\n   * The README contents\n   */\n  readme: string;\n  /**\n   * The list of activities to show\n   */\n  activities: Activity[];\n  /**\n   * The github user data loaded from the API\n   */\n  user: RestEndpointMethodTypes['users']['getByUsername']['response']['data'];\n  /**\n   * The latest 5 blog posts\n   */\n  latestPosts: Array<IStaticBlogPost | DevMigratedPost>;\n}\n\nexport default function Index(props: IndexProps) {\n  return (\n    <Box\n      display=\"grid\"\n      gridGap={3}\n      gridTemplateColumns={['1fr', '1fr 1fr', '1fr 1fr 1fr']}\n    >\n      <Box\n        display=\"flex\"\n        gridColumn={['span 1', 'span 2', 'span 1']}\n        flexDirection=\"column\"\n        sx={{ gap: '3' }}\n      >\n        <Card>\n          <Card.Body>\n            <aside>\n              <div className=\"image-wrapper\">\n                <Image\n                  width={260}\n                  height={260}\n                  src=\"/img/github-avatar.jpg\"\n                  alt=\"Github profile picture\"\n                />\n              </div>\n              <h2>\n                <Link\n                  href={props.user.html_url}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  aria-label=\"Github profile url\"\n                >\n                  Brad Taniguchi\n                </Link>\n              </h2>\n              <p>{props.user.bio}</p>\n\n              <section>\n                <h4>Socials</h4>\n                <ul>\n                  <li>\n                    <Link\n                      href={props.user.html_url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      aria-label=\"Github profile url\"\n                    >\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        alignItems=\"center\"\n                        sx={{ gap: '2' }}\n                      >\n                        <FaGithub /> <div>bradtaniguchi</div>\n                        <TabExternalIcon />\n                      </Box>\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      href=\"https://www.linkedin.com/in/bradley-taniguchi-62a052104\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      aria-label=\"LinkedIn profile url\"\n                    >\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        alignItems=\"center\"\n                        sx={{ gap: '2' }}\n                      >\n                        <FaLinkedin /> <div>LinkedIn</div>\n                        <TabExternalIcon />\n                      </Box>\n                    </Link>\n                  </li>\n\n                  <li>\n                    <Link\n                      href=\"https://replit.com/@bradtaniguchi\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      aria-label=\"Replit profile url\"\n                    >\n                      <Box\n                        display=\"flex\"\n                        flexDirection=\"row\"\n                        alignItems=\"center\"\n                        sx={{ gap: '2' }}\n                      >\n                        <SiReplit /> <div>Replit</div>\n                        <TabExternalIcon />\n                      </Box>\n                    </Link>\n                  </li>\n                </ul>\n              </section>\n            </aside>\n          </Card.Body>\n        </Card>\n\n        <Card>\n          <Card.Header display=\"flex\">\n            <Box flexGrow=\"100\">Latest Blog Post</Box>\n            <Box>\n              <LinkButton href=\"/blog\">All Posts</LinkButton>\n            </Box>\n          </Card.Header>\n          <Card.Body>\n            <Box\n              display=\"flex\"\n              flexDirection={['column']}\n              alignItems=\"center\"\n              sx={{ gap: '6' }}\n            >\n              {props.latestPosts.map((post) =>\n                isMigratedDevPost(post) ? (\n                  <div key={post.slug}>\n                    <DevToPost blog={post} displayMode=\"column\" />\n                  </div>\n                ) : (\n                  <div key={post.slug}>\n                    <StaticBlogPost blog={post} displayMode=\"column\" />\n                  </div>\n                )\n              )}\n            </Box>\n          </Card.Body>\n        </Card>\n      </Box>\n\n      <Box gridColumn={['span 1', 'span 2', 'span 2']}>\n        <Box gridColumn=\"span 2\">\n          <Box display=\"grid\" gridGap={3}>\n            <Card gridColumn=\"span 2\">\n              <Card.Header display=\"flex\">README</Card.Header>\n              <Card.Body>\n                <div>\n                  This website acts as my portfolio and blog. It is currently\n                  under construction and will be continually updated. This is\n                  actually the third version of my portfolio site and is used as\n                  a test-bed for developing things with new technologies. To\n                  learn more about how this project was built, checkout the{' '}\n                  <Link href=\"/about\">about</Link> page.\n                </div>\n              </Card.Body>\n            </Card>\n\n            <Card gridColumn=\"span 2\">\n              <Card.Header display=\"flex\">\n                <Box flexGrow=\"100\">Github README</Box>\n                <Box>\n                  <a\n                    href={GITHUB_URL}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    aria-label=\"Github profile URL\"\n                  >\n                    <StyledOcticon\n                      icon={MarkGithubIcon}\n                      size={16}\n                      sx={{ mr: 2 }}\n                    />\n                  </a>\n                </Box>\n              </Card.Header>\n              <Card.Body>\n                <div dangerouslySetInnerHTML={{ __html: props.readme }}></div>\n              </Card.Body>\n            </Card>\n\n            <Card gridColumn=\"span 2\">\n              <Card.Header display=\"flex\">\n                <Box flexGrow=\"100\">Latest Activity</Box>\n                {/* TODO: add client-side filtering */}\n                {/* TODO: add support for RSS-feed */}\n                {/* <Box>\n                  <RssIcon></RssIcon>\n                </Box> */}\n              </Card.Header>\n              <Card.Body>\n                <Activities activities={props.activities} />\n              </Card.Body>\n            </Card>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport async function getStaticProps(): Promise<{\n  props: IndexProps;\n}> {\n  const octokit = new Octokit();\n\n  const [readme, { data: user }, githubActivities, latestPosts] =\n    await Promise.all([\n      getMarkdown('README.md'),\n      octokit.users.getByUsername({\n        headers: withHeaders(),\n        username: 'bradtaniguchi',\n      }),\n      octokit.activity\n        .listPublicEventsForUser({\n          headers: withHeaders(),\n          username: 'bradtaniguchi',\n        })\n        .then(({ data }) =>\n          data\n            .map(({ id, type, actor, repo, created_at, payload }) => ({\n              // explicitly provide properties to save on some data sending over to the\n              // client\n              id,\n              type,\n              actor,\n              repo,\n              created_at,\n              payload,\n              internalType: 'github-public-activity' as const,\n            }))\n            .sort((a, b) => {\n              if (!a.created_at || !b.created_at) return 0;\n              return a.created_at > b.created_at ? -1 : 1;\n            })\n        ),\n\n      getLatestPosts(),\n    ]);\n\n  return {\n    props: {\n      readme,\n      activities: [...githubActivities],\n      user,\n      latestPosts,\n    },\n  };\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","DevToPost","memo","props","displayMode","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Link","href","blog","id","concat","slug","style","textDecoration","jsxs","Box","display","flexDirection","alignItems","justifyContent","sx","gap","Text","as","margin","title","description","tags","map","Label","variant","tag","date","Dayjs","format","StaticBlogPost","Card","borderColor","borderWidth","borderStyle","borderRadius","children","Header","bg","p","Body","Row","borderTopColor","borderTopStyle","borderTopWidth","migratedDevPostSchema","z","source","isMigratedDevPost","post","parse","err","LoggerProvider","loggerContextFactory","onLog","level","message","param","captureMessage","GithubPublicActivityLogin","jsx_runtime","fontWeight","color","mr","activity","actor","url","login","GithubPublicActivityRepo","repo","name","GithubPublicActivityTime","span","created_at","undefined","GithubPublicActivity","logger","useContext","Timeline","StyledOcticon","icon","MarkGithubIcon","type","payload","ref_type","JSON","stringify","_props_activity_payload_commits","hasMultiple","commits","length","replace","pull_request","html_url","number","issue","action","error","Activities","limit","setLimit","useState","mounted","useHasMounted","handleShowMoreOnClick","showShowMore","activities","Fragment","data-testid","slice","Button","width","onClick","div","Spinner","Index","gridGap","gridTemplateColumns","gridColumn","aside","className","Image","height","src","alt","h2","user","target","rel","aria-label","bio","section","h4","ul","li","FaGithub","TabExternalIcon","FaLinkedin","SiReplit","flexGrow","LinkButton","latestPosts","a","size","dangerouslySetInnerHTML","__html","readme"],"sourceRoot":""}