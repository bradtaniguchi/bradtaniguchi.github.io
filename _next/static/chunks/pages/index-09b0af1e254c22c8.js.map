{"version":3,"file":"static/chunks/pages/index-09b0af1e254c22c8.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./components/core/card.tsx","webpack://_N_E/./utils/logger.tsx","webpack://_N_E/./components/activity/github-public-activity.tsx","webpack://_N_E/./components/activity/activities.tsx","webpack://_N_E/./constants/github-url.ts","webpack://_N_E/./pages/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { Box, BoxProps } from '@primer/react';\n\nexport function Card(props: BoxProps) {\n  return (\n    <Box\n      borderColor=\"border.default\"\n      borderWidth={1}\n      borderStyle=\"solid\"\n      borderRadius=\"8px\"\n      {...props}\n    >\n      {props.children}\n    </Box>\n  );\n}\n\nCard.Header = function Header(props: BoxProps) {\n  return (\n    <Box bg=\"canvas.inset\" p={3} borderRadius=\"8px 8px 0 0\" {...props}>\n      {props.children}\n    </Box>\n  );\n};\n\nCard.Body = function Body(props: BoxProps) {\n  return (\n    <Box p={3} {...props}>\n      {props.children}\n    </Box>\n  );\n};\n\nCard.Row = function Row(props: BoxProps) {\n  // TODO: add row styling\n  return (\n    <Box\n      borderTopColor=\"border.default\"\n      borderTopStyle=\"solid\"\n      borderTopWidth=\"1px\"\n      {...props}\n    >\n      {props.children}\n    </Box>\n  );\n};\n","import { loggerContextFactory } from '@bradtaniguchi-dev/common-react';\nimport { captureMessage } from '@sentry/nextjs';\n\nexport const LoggerProvider = loggerContextFactory({\n  onLog: ({ level, message }) => {\n    if (level === 'error' && typeof message === 'string')\n      captureMessage(message);\n  },\n});\n","import { MarkGithubIcon } from '@primer/octicons-react';\nimport { Box, StyledOcticon, Timeline } from '@primer/react';\nimport { DateTime } from 'luxon';\nimport Link from 'next/link';\nimport { memo, useContext } from 'react';\nimport { GithubPublicActivity as GithubPublicActivityType } from '../../models/github-public-activity';\nimport { LoggerProvider } from '../../utils/logger';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GithubPublicActivityProps {\n  activity: GithubPublicActivityType;\n}\n\nconst GithubPublicActivityLogin = (props: GithubPublicActivityProps) => (\n  <Box\n    as=\"span\"\n    sx={{\n      fontWeight: 'bold',\n      color: 'fg.default',\n      mr: 1,\n    }}\n  >\n    <Link href={props.activity.actor.url}>{props.activity.actor.login}</Link>\n  </Box>\n);\n\nconst GithubPublicActivityRepo = (props: GithubPublicActivityProps) => (\n  <Box\n    as=\"span\"\n    sx={{\n      fontWeight: 'bold',\n      color: 'fg.default',\n      mr: 1,\n    }}\n  >\n    <Link href={props.activity.repo.url}>{props.activity.repo.name}</Link>\n  </Box>\n);\n\nconst GithubPublicActivityTime = (props: GithubPublicActivityProps) => (\n  <Box as=\"span\" color=\"fg.muted\">\n    <span title={props.activity.created_at}>\n      on {DateTime.fromISO(props.activity.created_at).toFormat('yyyy-MM-dd')}\n    </span>\n  </Box>\n);\n\n/**\n * A component representing github public activity.\n */\nexport const GithubPublicActivity = memo(function GithubPublicActivity(\n  props: GithubPublicActivityProps\n) {\n  const logger = useContext(LoggerProvider);\n  return (\n    <Timeline.Item>\n      <Timeline.Badge>\n        <StyledOcticon icon={MarkGithubIcon} />\n      </Timeline.Badge>\n      <Timeline.Body>\n        {(() => {\n          switch (props.activity.type) {\n            case 'CreateEvent':\n              return (\n                <Box sx={{ display: 'inline' }}>\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  {(() => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if ((props.activity.payload as any).ref_type === 'branch')\n                      return 'created branch on ';\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if ((props.activity.payload as any).ref_type === 'branch')\n                      return 'created tag on ';\n                    return 'updated ';\n                  })()}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'DeleteEvent':\n              return (\n                <Box sx={{ display: 'inline' }}>\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  {(() => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if ((props.activity.payload as any).ref_type === 'branch')\n                      return 'deleted branch on ';\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    if ((props.activity.payload as any).ref_type === 'branch')\n                      return 'deleted tag on ';\n                    return 'deleted ';\n                  })()}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'PushEvent':\n              return (\n                <Box\n                  sx={{ display: 'inline' }}\n                  title={JSON.stringify(props.activity, null, 2)}\n                >\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  pushed{' '}\n                  {(() => {\n                    type PayloadWithCommits = {\n                      commits: Array<{\n                        url: string;\n                      }>;\n                    };\n                    const hasMultiple =\n                      (props.activity.payload as PayloadWithCommits).commits\n                        ?.length > 1;\n\n                    return (\n                      <Link\n                        href={(\n                          (props.activity.payload as PayloadWithCommits)\n                            .commits[0].url || ''\n                        )\n                          .replace('api.github.com/repos/', 'github.com/')\n                          .replace('/commits/', '/commit/')}\n                      >\n                        {hasMultiple ? 'commits ' : 'a commit '}\n                      </Link>\n                    );\n                  })()}\n                  to {''}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'PullRequestEvent':\n              type PayloadWithPullRequest = {\n                pull_request: {\n                  url: string;\n                  html_url: string;\n                  number: number;\n                  title: string;\n                };\n              };\n              return (\n                <Box\n                  sx={{ display: 'inline' }}\n                  title={JSON.stringify(props.activity, null, 2)}\n                >\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  created pull request{' '}\n                  <Link\n                    href={\n                      (props.activity.payload as PayloadWithPullRequest)\n                        .pull_request.html_url\n                    }\n                    title={\n                      (props.activity.payload as PayloadWithPullRequest)\n                        .pull_request.title\n                    }\n                  >\n                    {`#${\n                      (props.activity.payload as PayloadWithPullRequest)\n                        .pull_request.number\n                    }`}\n                  </Link>{' '}\n                  for <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'IssuesEvent':\n              return (\n                <Box\n                  sx={{ display: 'inline' }}\n                  title={JSON.stringify(props.activity, null, 2)}\n                >\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  created issue{' '}\n                  <Link\n                    href={props.activity.payload.issue.html_url}\n                    title={props.activity.payload.issue.title}\n                  >\n                    {`#${props.activity.payload.issue.number}`}\n                  </Link>{' '}\n                  for <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'WatchEvent':\n              if (props.activity.payload.action === 'started')\n                return (\n                  <Box sx={{ display: 'inline' }}>\n                    <GithubPublicActivityLogin activity={props.activity} />\n                    starred repo{' '}\n                    <GithubPublicActivityRepo activity={props.activity} />\n                    <GithubPublicActivityTime activity={props.activity} />\n                  </Box>\n                );\n              return (\n                <Box sx={{ display: 'inline' }}>\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  un-starred repo{' '}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            case 'IssueCommentEvent':\n              // this is an experiment\n              return (\n                <Box sx={{ display: 'inline' }}>\n                  <GithubPublicActivityLogin activity={props.activity} />\n                  un-starred repo{' '}\n                  <GithubPublicActivityRepo activity={props.activity} />\n                  <GithubPublicActivityTime activity={props.activity} />\n                </Box>\n              );\n            default:\n              logger.error(\n                `[GithubPublicActivity] unknown public-activity: ${props.activity.type}`,\n                props.activity\n              );\n              return null;\n          }\n        })()}\n      </Timeline.Body>\n    </Timeline.Item>\n  );\n});\n","import { Box, Button, Spinner, Timeline } from '@primer/react';\nimport { Activity } from '../../models/activity';\nimport { memo, useState } from 'react';\nimport { GithubPublicActivity } from './github-public-activity';\nimport { useHasMounted } from '@bradtaniguchi-dev/common-react';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActivitiesProps {\n  activities: Activity[];\n}\n\n/**\n * The activities shown on the page. Currently only includes github\n * activity.\n */\nexport const Activities = memo(function Activities(props: ActivitiesProps) {\n  const [limit, setLimit] = useState<number>(5);\n  const mounted = useHasMounted();\n\n  const handleShowMoreOnClick = () => setLimit(limit + 5);\n\n  // we only want to show this button if the limit is less than the total\n  const showShowMore = limit < props.activities.length;\n\n  // when in a server-environment, render a spinner for the quick duration\n  // between hydration and rendering\n  if (!mounted) return <Spinner />;\n\n  if (!props.activities.length) return <div>No Timeline available</div>;\n\n  return (\n    <>\n      <Timeline>\n        {props.activities\n          .map((activity) => (\n            <GithubPublicActivity key={activity.id} activity={activity} />\n          ))\n          .slice(0, limit)}\n      </Timeline>\n      {showShowMore ? (\n        <Box sx={{ margin: '8px' }}>\n          <Button\n            sx={{\n              display: 'flex',\n              width: '100%',\n              flexDirection: 'row',\n              justifyContent: 'center',\n            }}\n            onClick={handleShowMoreOnClick}\n          >\n            <Box>{'Show More'}</Box>\n          </Button>\n        </Box>\n      ) : // TODO: add some kind of \"continuation\" design to\n      // show activity doesn't just stop here\n      null}\n    </>\n  );\n});\n","/**\n * The URL for the github project. This will\n * change once this is migrated to be the primary repo.\n */\nexport const GITHUB_URL = 'https://github.com/bradtaniguchi/bradtaniguchi-dev';\n","import { Octokit, RestEndpointMethodTypes } from '@octokit/rest';\nimport { MarkGithubIcon } from '@primer/octicons-react';\nimport { Box, StyledOcticon } from '@primer/react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport { FaGithub, FaLinkedin, FaTwitter } from 'react-icons/fa';\nimport { SiCodewars } from 'react-icons/si';\nimport { Activities } from '../components/activity/activities';\nimport { Card } from '../components/core/card';\nimport { GITHUB_URL } from '../constants/github-url';\nimport { Activity } from '../models/activity';\nimport { getMarkdown } from '../utils/get-markdown';\nimport { withHeaders } from '../utils/with-headers';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface IndexProps {\n  /**\n   * The README contents\n   */\n  readme: string;\n  /**\n   * The list of activities to show\n   */\n  activities: Activity[];\n  /**\n   * The github user data loaded from the API\n   */\n  user: RestEndpointMethodTypes['users']['getByUsername']['response']['data'];\n}\n\nexport default function Index(props: IndexProps) {\n  return (\n    <Box\n      display=\"grid\"\n      gridGap={3}\n      gridTemplateColumns={['1fr', '1fr 1fr', '1fr 1fr 1fr']}\n    >\n      <Box gridColumn={['span 1', 'span 2', 'span 1']}>\n        <Card>\n          <Card.Body>\n            <aside>\n              <div className=\"image-wrapper\">\n                <Image\n                  width={260}\n                  height={260}\n                  src=\"/img/github-avatar.jpg\"\n                  alt=\"Github profile picture\"\n                />\n              </div>\n              <h2>\n                <Link\n                  href={props.user.html_url}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  aria-label=\"Github profile url\"\n                >\n                  Brad Taniguchi\n                </Link>\n              </h2>\n              <p>{props.user.bio}</p>\n\n              <section>\n                <h4>Socials</h4>\n                <ul>\n                  <li>\n                    <Link\n                      href={props.user.html_url}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      aria-label=\"LinkedIn url\"\n                    >\n                      <FaGithub /> bradtaniguchi\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      href=\"https://twitter.com/brad_taniguchi\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      aria-label=\"Twitter handle url\"\n                    >\n                      <FaTwitter /> @brad_taniguchi\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      href=\"https://www.linkedin.com/in/bradley-taniguchi-62a052104\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      aria-label=\"LinkedIn profile url\"\n                    >\n                      <FaLinkedin /> LinkedIn\n                    </Link>\n                  </li>\n\n                  <li>\n                    <Link\n                      href=\"https://www.codewars.com/users/bradtaniguchi\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      aria-label=\"Codewars profile url\"\n                    >\n                      <SiCodewars /> Codewars\n                      {/* TODO: add \"open new tab\" icon */}\n                    </Link>\n                  </li>\n                </ul>\n              </section>\n            </aside>\n          </Card.Body>\n        </Card>\n      </Box>\n\n      <Box gridColumn=\"span 2\">\n        <Box gridColumn=\"span 2\">\n          <Box display=\"grid\" gridGap={3}>\n            <Card gridColumn=\"span 2\">\n              <Card.Header display=\"flex\">README</Card.Header>\n              <Card.Body>\n                <div>\n                  This website acts as my portfolio and blog. It is currently\n                  under construction and will be continually updated. This is\n                  actually the third version of my portfolio site and is used as\n                  a test-bed for developing things with new technologies. To\n                  learn more about how this project was built, checkout the{' '}\n                  <Link href=\"/about\">about</Link> page.\n                </div>\n              </Card.Body>\n            </Card>\n\n            <Card gridColumn=\"span 2\">\n              <Card.Header display=\"flex\">\n                <Box flexGrow=\"100\">Github README</Box>\n                <Box>\n                  <a\n                    href={GITHUB_URL}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                    aria-label=\"Github profile URL\"\n                  >\n                    <StyledOcticon\n                      icon={MarkGithubIcon}\n                      size={16}\n                      sx={{ mr: 2 }}\n                    />\n                  </a>\n                </Box>\n              </Card.Header>\n              <Card.Body>\n                {/* TODO: update/move to about? */}\n                <div dangerouslySetInnerHTML={{ __html: props.readme }}></div>\n              </Card.Body>\n            </Card>\n\n            <Card gridColumn=\"span 2\">\n              <Card.Header display=\"flex\">\n                <Box flexGrow=\"100\">Latest Activity</Box>\n                {/* TODO: add client-side filtering */}\n                {/* TODO: add support for RSS-feed */}\n                {/* <Box>\n                  <RssIcon></RssIcon>\n                </Box> */}\n              </Card.Header>\n              <Card.Body>\n                <Activities activities={props.activities} />\n              </Card.Body>\n            </Card>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport async function getStaticProps(): Promise<{\n  props: IndexProps;\n}> {\n  const octokit = new Octokit();\n\n  const [readme, { data: user }, githubActivities] = await Promise.all([\n    getMarkdown('README.md'),\n    octokit.users.getByUsername({\n      headers: withHeaders(),\n      username: 'bradtaniguchi',\n    }),\n    octokit.activity\n      .listPublicEventsForUser({\n        headers: withHeaders(),\n        username: 'bradtaniguchi',\n      })\n      .then(({ data }) =>\n        data\n          .map(({ id, type, actor, repo, created_at, payload }) => ({\n            // explicitly provide properties to save on some data sending over to the\n            // client\n            id,\n            type,\n            actor,\n            repo,\n            created_at,\n            payload,\n            internalType: 'github-public-activity' as const,\n          }))\n          .sort((a, b) => (a.created_at > b.created_at ? -1 : 1))\n      ),\n  ]);\n\n  return {\n    props: {\n      readme,\n      activities: [...githubActivities],\n      user,\n    },\n  };\n}\n","(self[\"webpackChunk_N_E\"] = self[\"webpackChunk_N_E\"] || []).push([[405],{\n\n/***/ 7314:\n/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {\n\n\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(7420);\n      }\n    ]);\n    if(false) {}\n  \n\n/***/ }),\n\n/***/ 7691:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": function() { return /* binding */ Card; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2322);\n/* harmony import */ var _primer_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7118);\n\n\nfunction Card(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_primer_react__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z, {\n        borderColor: \"border.default\",\n        borderWidth: 1,\n        borderStyle: \"solid\",\n        borderRadius: \"8px\",\n        ...props,\n        children: props.children\n    });\n}\nCard.Header = function Header(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_primer_react__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z, {\n        bg: \"canvas.inset\",\n        p: 3,\n        borderRadius: \"8px 8px 0 0\",\n        ...props,\n        children: props.children\n    });\n};\nCard.Body = function Body(props) {\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_primer_react__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z, {\n        p: 3,\n        ...props,\n        children: props.children\n    });\n};\nCard.Row = function Row(props) {\n    // TODO: add row styling\n    return /*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_primer_react__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z, {\n        borderTopColor: \"border.default\",\n        borderTopStyle: \"solid\",\n        borderTopWidth: \"1px\",\n        ...props,\n        children: props.children\n    });\n};\n\n\n/***/ }),\n\n/***/ 7420:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"__N_SSG\": function() { return /* binding */ __N_SSG; },\n  \"default\": function() { return /* binding */ Index; }\n});\n\n// EXTERNAL MODULE: ../../node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(2322);\n// EXTERNAL MODULE: ../../node_modules/@primer/octicons-react/dist/index.esm.js\nvar index_esm = __webpack_require__(8106);\n// EXTERNAL MODULE: ../../node_modules/@primer/react/lib-esm/Box.js\nvar Box = __webpack_require__(7118);\n// EXTERNAL MODULE: ../../node_modules/@primer/react/lib-esm/StyledOcticon.js\nvar StyledOcticon = __webpack_require__(5633);\n// EXTERNAL MODULE: ../../node_modules/next/image.js\nvar next_image = __webpack_require__(6577);\nvar image_default = /*#__PURE__*/__webpack_require__.n(next_image);\n// EXTERNAL MODULE: ../../node_modules/next/link.js\nvar next_link = __webpack_require__(9097);\nvar link_default = /*#__PURE__*/__webpack_require__.n(next_link);\n// EXTERNAL MODULE: ../../node_modules/react-icons/fa/index.esm.js\nvar fa_index_esm = __webpack_require__(8978);\n// EXTERNAL MODULE: ../../node_modules/react-icons/si/index.esm.js\nvar si_index_esm = __webpack_require__(6636);\n// EXTERNAL MODULE: ../../node_modules/@primer/react/lib-esm/Spinner.js\nvar Spinner = __webpack_require__(2951);\n// EXTERNAL MODULE: ../../node_modules/@primer/react/lib-esm/Timeline.js\nvar Timeline = __webpack_require__(6356);\n// EXTERNAL MODULE: ../../node_modules/@primer/react/lib-esm/Button/index.js + 4 modules\nvar Button = __webpack_require__(2599);\n// EXTERNAL MODULE: ../../node_modules/react/index.js\nvar react = __webpack_require__(2784);\n// EXTERNAL MODULE: ../../node_modules/luxon/src/luxon.js + 23 modules\nvar luxon = __webpack_require__(6234);\n// EXTERNAL MODULE: ../../libs/common-react/src/index.ts + 17 modules\nvar src = __webpack_require__(3934);\n// EXTERNAL MODULE: ../../node_modules/@sentry/core/esm/exports.js\nvar esm_exports = __webpack_require__(2642);\n;// CONCATENATED MODULE: ./utils/logger.tsx\n\n\nconst LoggerProvider = (0,src/* loggerContextFactory */.Fp)({\n    onLog: (param)=>{\n        let { level , message  } = param;\n        if (level === \"error\" && typeof message === \"string\") (0,esm_exports/* captureMessage */.uT)(message);\n    }\n});\n\n;// CONCATENATED MODULE: ./components/activity/github-public-activity.tsx\n\n\n\n\n\n\n\nconst GithubPublicActivityLogin = (props)=>/*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n        as: \"span\",\n        sx: {\n            fontWeight: \"bold\",\n            color: \"fg.default\",\n            mr: 1\n        },\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)((link_default()), {\n            href: props.activity.actor.url,\n            children: props.activity.actor.login\n        })\n    });\nconst GithubPublicActivityRepo = (props)=>/*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n        as: \"span\",\n        sx: {\n            fontWeight: \"bold\",\n            color: \"fg.default\",\n            mr: 1\n        },\n        children: /*#__PURE__*/ (0,jsx_runtime.jsx)((link_default()), {\n            href: props.activity.repo.url,\n            children: props.activity.repo.name\n        })\n    });\nconst GithubPublicActivityTime = (props)=>/*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n        as: \"span\",\n        color: \"fg.muted\",\n        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"span\", {\n            title: props.activity.created_at,\n            children: [\n                \"on \",\n                luxon/* DateTime.fromISO */.ou.fromISO(props.activity.created_at).toFormat(\"yyyy-MM-dd\")\n            ]\n        })\n    });\n/**\n * A component representing github public activity.\n */ const GithubPublicActivity = /*#__PURE__*/ (0,react.memo)(function GithubPublicActivity(props) {\n    const logger = (0,react.useContext)(LoggerProvider);\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Timeline/* default.Item */.Z.Item, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Timeline/* default.Badge */.Z.Badge, {\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledOcticon/* default */.Z, {\n                    icon: index_esm/* MarkGithubIcon */.g_Y\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Timeline/* default.Body */.Z.Body, {\n                children: (()=>{\n                    switch(props.activity.type){\n                        case \"CreateEvent\":\n                            return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                sx: {\n                                    display: \"inline\"\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityLogin, {\n                                        activity: props.activity\n                                    }),\n                                    (()=>{\n                                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                        if (props.activity.payload.ref_type === \"branch\") return \"created branch on \";\n                                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                        if (props.activity.payload.ref_type === \"branch\") return \"created tag on \";\n                                        return \"updated \";\n                                    })(),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityRepo, {\n                                        activity: props.activity\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityTime, {\n                                        activity: props.activity\n                                    })\n                                ]\n                            });\n                        case \"DeleteEvent\":\n                            return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                sx: {\n                                    display: \"inline\"\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityLogin, {\n                                        activity: props.activity\n                                    }),\n                                    (()=>{\n                                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                        if (props.activity.payload.ref_type === \"branch\") return \"deleted branch on \";\n                                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                        if (props.activity.payload.ref_type === \"branch\") return \"deleted tag on \";\n                                        return \"deleted \";\n                                    })(),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityRepo, {\n                                        activity: props.activity\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityTime, {\n                                        activity: props.activity\n                                    })\n                                ]\n                            });\n                        case \"PushEvent\":\n                            return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                sx: {\n                                    display: \"inline\"\n                                },\n                                title: JSON.stringify(props.activity, null, 2),\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityLogin, {\n                                        activity: props.activity\n                                    }),\n                                    \"pushed\",\n                                    \" \",\n                                    (()=>{\n                                        var ref;\n                                        const hasMultiple = ((ref = props.activity.payload.commits) === null || ref === void 0 ? void 0 : ref.length) > 1;\n                                        return /*#__PURE__*/ (0,jsx_runtime.jsx)((link_default()), {\n                                            href: (props.activity.payload.commits[0].url || \"\").replace(\"api.github.com/repos/\", \"github.com/\").replace(\"/commits/\", \"/commit/\"),\n                                            children: hasMultiple ? \"commits \" : \"a commit \"\n                                        });\n                                    })(),\n                                    \"to \",\n                                    \"\",\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityRepo, {\n                                        activity: props.activity\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityTime, {\n                                        activity: props.activity\n                                    })\n                                ]\n                            });\n                        case \"PullRequestEvent\":\n                            return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                sx: {\n                                    display: \"inline\"\n                                },\n                                title: JSON.stringify(props.activity, null, 2),\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityLogin, {\n                                        activity: props.activity\n                                    }),\n                                    \"created pull request\",\n                                    \" \",\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)((link_default()), {\n                                        href: props.activity.payload.pull_request.html_url,\n                                        title: props.activity.payload.pull_request.title,\n                                        children: \"#\".concat(props.activity.payload.pull_request.number)\n                                    }),\n                                    \" \",\n                                    \"for \",\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityRepo, {\n                                        activity: props.activity\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityTime, {\n                                        activity: props.activity\n                                    })\n                                ]\n                            });\n                        case \"IssuesEvent\":\n                            return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                sx: {\n                                    display: \"inline\"\n                                },\n                                title: JSON.stringify(props.activity, null, 2),\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityLogin, {\n                                        activity: props.activity\n                                    }),\n                                    \"created issue\",\n                                    \" \",\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)((link_default()), {\n                                        href: props.activity.payload.issue.html_url,\n                                        title: props.activity.payload.issue.title,\n                                        children: \"#\".concat(props.activity.payload.issue.number)\n                                    }),\n                                    \" \",\n                                    \"for \",\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityRepo, {\n                                        activity: props.activity\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityTime, {\n                                        activity: props.activity\n                                    })\n                                ]\n                            });\n                        case \"WatchEvent\":\n                            if (props.activity.payload.action === \"started\") return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                sx: {\n                                    display: \"inline\"\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityLogin, {\n                                        activity: props.activity\n                                    }),\n                                    \"starred repo\",\n                                    \" \",\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityRepo, {\n                                        activity: props.activity\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityTime, {\n                                        activity: props.activity\n                                    })\n                                ]\n                            });\n                            return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                sx: {\n                                    display: \"inline\"\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityLogin, {\n                                        activity: props.activity\n                                    }),\n                                    \"un-starred repo\",\n                                    \" \",\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityRepo, {\n                                        activity: props.activity\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityTime, {\n                                        activity: props.activity\n                                    })\n                                ]\n                            });\n                        case \"IssueCommentEvent\":\n                            // this is an experiment\n                            return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                                sx: {\n                                    display: \"inline\"\n                                },\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityLogin, {\n                                        activity: props.activity\n                                    }),\n                                    \"un-starred repo\",\n                                    \" \",\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityRepo, {\n                                        activity: props.activity\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivityTime, {\n                                        activity: props.activity\n                                    })\n                                ]\n                            });\n                        default:\n                            logger.error(\"[GithubPublicActivity] unknown public-activity: \".concat(props.activity.type), props.activity);\n                            return null;\n                    }\n                })()\n            })\n        ]\n    });\n});\n\n;// CONCATENATED MODULE: ./components/activity/activities.tsx\n\n\n\n\n\n/**\n * The activities shown on the page. Currently only includes github\n * activity.\n */ const Activities = /*#__PURE__*/ (0,react.memo)(function Activities(props) {\n    const [limit, setLimit] = (0,react.useState)(5);\n    const mounted = (0,src/* useHasMounted */.f3)();\n    const handleShowMoreOnClick = ()=>setLimit(limit + 5);\n    // we only want to show this button if the limit is less than the total\n    const showShowMore = limit < props.activities.length;\n    // when in a server-environment, render a spinner for the quick duration\n    // between hydration and rendering\n    if (!mounted) return /*#__PURE__*/ (0,jsx_runtime.jsx)(Spinner/* default */.Z, {});\n    if (!props.activities.length) return /*#__PURE__*/ (0,jsx_runtime.jsx)(\"div\", {\n        children: \"No Timeline available\"\n    });\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Timeline/* default */.Z, {\n                children: props.activities.map((activity)=>/*#__PURE__*/ (0,jsx_runtime.jsx)(GithubPublicActivity, {\n                        activity: activity\n                    }, activity.id)).slice(0, limit)\n            }),\n            showShowMore ? /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                sx: {\n                    margin: \"8px\"\n                },\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Button/* Button */.zx, {\n                    sx: {\n                        display: \"flex\",\n                        width: \"100%\",\n                        flexDirection: \"row\",\n                        justifyContent: \"center\"\n                    },\n                    onClick: handleShowMoreOnClick,\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                        children: \"Show More\"\n                    })\n                })\n            }) : // show activity doesn't just stop here\n            null\n        ]\n    });\n});\n\n// EXTERNAL MODULE: ./components/core/card.tsx\nvar card = __webpack_require__(7691);\n;// CONCATENATED MODULE: ./constants/github-url.ts\n/**\n * The URL for the github project. This will\n * change once this is migrated to be the primary repo.\n */ const GITHUB_URL = \"https://github.com/bradtaniguchi/bradtaniguchi-dev\";\n\n;// CONCATENATED MODULE: ./pages/index.tsx\n\n\n\n\n\n\n\n\n\n\nvar __N_SSG = true;\nfunction Index(props) {\n    return /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n        display: \"grid\",\n        gridGap: 3,\n        gridTemplateColumns: [\n            \"1fr\",\n            \"1fr 1fr\",\n            \"1fr 1fr 1fr\"\n        ],\n        children: [\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                gridColumn: [\n                    \"span 1\",\n                    \"span 2\",\n                    \"span 1\"\n                ],\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(card/* Card */.Z, {\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(card/* Card.Body */.Z.Body, {\n                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"aside\", {\n                            children: [\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"div\", {\n                                    className: \"image-wrapper\",\n                                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)((image_default()), {\n                                        width: 260,\n                                        height: 260,\n                                        src: \"/img/github-avatar.jpg\",\n                                        alt: \"Github profile picture\"\n                                    })\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"h2\", {\n                                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)((link_default()), {\n                                        href: props.user.html_url,\n                                        target: \"_blank\",\n                                        rel: \"noreferrer\",\n                                        \"aria-label\": \"Github profile url\",\n                                        children: \"Brad Taniguchi\"\n                                    })\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"p\", {\n                                    children: props.user.bio\n                                }),\n                                /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"section\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,jsx_runtime.jsx)(\"h4\", {\n                                            children: \"Socials\"\n                                        }),\n                                        /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"ul\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)((link_default()), {\n                                                        href: props.user.html_url,\n                                                        target: \"_blank\",\n                                                        rel: \"noreferrer\",\n                                                        \"aria-label\": \"LinkedIn url\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(fa_index_esm/* FaGithub */.hJX, {}),\n                                                            \" bradtaniguchi\"\n                                                        ]\n                                                    })\n                                                }),\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)((link_default()), {\n                                                        href: \"https://twitter.com/brad_taniguchi\",\n                                                        target: \"_blank\",\n                                                        rel: \"noreferrer\",\n                                                        \"aria-label\": \"Twitter handle url\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(fa_index_esm/* FaTwitter */.fWC, {}),\n                                                            \" @brad_taniguchi\"\n                                                        ]\n                                                    })\n                                                }),\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)((link_default()), {\n                                                        href: \"https://www.linkedin.com/in/bradley-taniguchi-62a052104\",\n                                                        target: \"_blank\",\n                                                        rel: \"noreferrer\",\n                                                        \"aria-label\": \"LinkedIn profile url\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(fa_index_esm/* FaLinkedin */.ltd, {}),\n                                                            \" LinkedIn\"\n                                                        ]\n                                                    })\n                                                }),\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)(\"li\", {\n                                                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)((link_default()), {\n                                                        href: \"https://www.codewars.com/users/bradtaniguchi\",\n                                                        target: \"_blank\",\n                                                        rel: \"noreferrer\",\n                                                        \"aria-label\": \"Codewars profile url\",\n                                                        children: [\n                                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(si_index_esm/* SiCodewars */.eS6, {}),\n                                                            \" Codewars\"\n                                                        ]\n                                                    })\n                                                })\n                                            ]\n                                        })\n                                    ]\n                                })\n                            ]\n                        })\n                    })\n                })\n            }),\n            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                gridColumn: \"span 2\",\n                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                    gridColumn: \"span 2\",\n                    children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(Box/* default */.Z, {\n                        display: \"grid\",\n                        gridGap: 3,\n                        children: [\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(card/* Card */.Z, {\n                                gridColumn: \"span 2\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(card/* Card.Header */.Z.Header, {\n                                        display: \"flex\",\n                                        children: \"README\"\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(card/* Card.Body */.Z.Body, {\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsxs)(\"div\", {\n                                            children: [\n                                                \"This website acts as my portfolio and blog. It is currently under construction and will be continually updated. This is actually the third version of my portfolio site and is used as a test-bed for developing things with new technologies. To learn more about how this project was built, checkout the\",\n                                                \" \",\n                                                /*#__PURE__*/ (0,jsx_runtime.jsx)((link_default()), {\n                                                    href: \"/about\",\n                                                    children: \"about\"\n                                                }),\n                                                \" page.\"\n                                            ]\n                                        })\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(card/* Card */.Z, {\n                                gridColumn: \"span 2\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsxs)(card/* Card.Header */.Z.Header, {\n                                        display: \"flex\",\n                                        children: [\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                                                flexGrow: \"100\",\n                                                children: \"Github README\"\n                                            }),\n                                            /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                                                children: /*#__PURE__*/ (0,jsx_runtime.jsx)(\"a\", {\n                                                    href: GITHUB_URL,\n                                                    target: \"_blank\",\n                                                    rel: \"noreferrer\",\n                                                    \"aria-label\": \"Github profile URL\",\n                                                    children: /*#__PURE__*/ (0,jsx_runtime.jsx)(StyledOcticon/* default */.Z, {\n                                                        icon: index_esm/* MarkGithubIcon */.g_Y,\n                                                        size: 16,\n                                                        sx: {\n                                                            mr: 2\n                                                        }\n                                                    })\n                                                })\n                                            })\n                                        ]\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(card/* Card.Body */.Z.Body, {\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(\"div\", {\n                                            dangerouslySetInnerHTML: {\n                                                __html: props.readme\n                                            }\n                                        })\n                                    })\n                                ]\n                            }),\n                            /*#__PURE__*/ (0,jsx_runtime.jsxs)(card/* Card */.Z, {\n                                gridColumn: \"span 2\",\n                                children: [\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(card/* Card.Header */.Z.Header, {\n                                        display: \"flex\",\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Box/* default */.Z, {\n                                            flexGrow: \"100\",\n                                            children: \"Latest Activity\"\n                                        })\n                                    }),\n                                    /*#__PURE__*/ (0,jsx_runtime.jsx)(card/* Card.Body */.Z.Body, {\n                                        children: /*#__PURE__*/ (0,jsx_runtime.jsx)(Activities, {\n                                            activities: props.activities\n                                        })\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                })\n            })\n        ]\n    });\n}\n\n\n/***/ })\n\n},\n/******/ function(__webpack_require__) { // webpackRuntimeModules\n/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }\n/******/ __webpack_require__.O(0, [525,193,97,234,274,774,888,179], function() { return __webpack_exec__(7314); });\n/******/ var __webpack_exports__ = __webpack_require__.O();\n/******/ _N_E = __webpack_exports__;\n/******/ }\n]);"],"names":["self","push","__unused_webpack_module","__unused_webpack_exports","__webpack_require__","window","__NEXT_P","__webpack_exports__","d","Card","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","_primer_react__WEBPACK_IMPORTED_MODULE_1__","props","jsx","Z","borderColor","borderWidth","borderStyle","borderRadius","children","Header","bg","p","Body","Row","borderTopColor","borderTopStyle","borderTopWidth","r","__N_SSG","Index","jsx_runtime","index_esm","Box","StyledOcticon","next_image","image_default","n","next_link","link_default","fa_index_esm","si_index_esm","Spinner","Timeline","Button","react","luxon","src","esm_exports","LoggerProvider","Fp","param","level","message","uT","GithubPublicActivityLogin","as","sx","fontWeight","color","mr","href","activity","actor","url","login","GithubPublicActivityRepo","repo","name","GithubPublicActivityTime","jsxs","title","created_at","ou","fromISO","toFormat","GithubPublicActivity","memo","logger","useContext","Item","Badge","icon","g_Y","type","display","payload","ref_type","JSON","stringify","ref","hasMultiple","commits","length","replace","pull_request","html_url","concat","number","issue","action","error","Activities","limit","setLimit","useState","mounted","f3","handleShowMoreOnClick","showShowMore","activities","Fragment","map","id","slice","margin","zx","width","flexDirection","justifyContent","onClick","card","gridGap","gridTemplateColumns","gridColumn","className","height","alt","user","target","rel","bio","hJX","fWC","ltd","eS6","flexGrow","size","dangerouslySetInnerHTML","__html","readme","O","s","_N_E"],"sourceRoot":""}